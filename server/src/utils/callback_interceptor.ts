import { Markup } from 'telegraf';
import { MyContext } from '../types/CstContext';
import dotenv from 'dotenv';
import { isStockTradingTime } from './days_time_check';
dotenv.config();
export async function handleCallbackQuery(ctx: MyContext, data: string) {
  const telegramId = String(ctx?.from?.id);

  const res = await fetch(`${process.env.URL}users/${telegramId}`, {
    method: 'GET',
    headers: { 'Content-Type': 'application/json' },
  });

  if (!res.ok) {
    await ctx.reply('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
    return;
  }

  const user = await res.json();
  if (!ctx.session) ctx.session = {};

  switch (data) {
    case 'give_admin':
      await ctx.answerCbQuery('–ê–¥–º—ñ–Ω–∫–∞ –≤–∏–¥–∞–Ω–∞');
      await ctx.reply(
        '–í–≤–µ–¥—ñ—Ç—å Telegram ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–æ–º—É —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞—Ç–∏ –∞–¥–º—ñ–Ω–∫—É:',
        Markup.inlineKeyboard([
          [Markup.button.callback('üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', 'show_main_menu')],
          [Markup.button.callback('–ê–¥–º—ñ–Ω –º–µ–Ω—é', 'show_admin_menu')],
        ])
      );
      ctx.session.waitingForAdminId = true;
      ctx.session.action = 'give_admin';
      break;

    case 'revoke_admin':
      await ctx.answerCbQuery('–ê–¥–º—ñ–Ω–∫–∞ –≤—ñ–¥–∫–ª–∏–∫–∞–Ω–∞');
      await ctx.reply(
        '–í–≤–µ–¥—ñ—Ç—å Telegram ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —É —è–∫–æ–≥–æ —Ö–æ—á–µ—Ç–µ –∑–∞–±—Ä–∞—Ç–∏ –∞–¥–º—ñ–Ω–∫—É:',
        Markup.inlineKeyboard([
          [Markup.button.callback('‚ùå –í—ñ–¥–º—ñ–Ω–∞', 'show_main_menu')],
          [Markup.button.callback('–ê–¥–º—ñ–Ω –º–µ–Ω—é', 'show_admin_menu')],
        ])
      );
      ctx.session.waitingForAdminId = true;
      ctx.session.action = 'revoke_admin';
      break;

    case 'grant_access_self':
      await ctx.answerCbQuery('–î–æ—Å—Ç—É–ø –Ω–∞–¥–∞–Ω–æ —Å–æ–±—ñ');
      break;
    case 'grant_access_by_id':
      await ctx.reply(
        '–í–≤–µ–¥—ñ—Ç—å Telegram ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–æ–º—É —Ö–æ—á–µ—Ç–µ –Ω–∞–¥–∞—Ç–∏ –¥–æ—Å—Ç—É–ø:',
        Markup.inlineKeyboard([
          [Markup.button.callback('‚ùå –í—ñ–¥–º—ñ–Ω–∞', 'show_main_menu')],
          [Markup.button.callback('–ê–¥–º—ñ–Ω –º–µ–Ω—é', 'show_admin_menu')],
        ])
      );
      ctx.session.waitingForAdminId = true;
      ctx.session.action = 'grant_access';
      break;

    // –û—Ç–∑—ã–≤ –¥–æ—Å—Ç—É–ø–∞ (–±–µ–∑ —Ä–æ–ª–∏ admin)
    case 'revoke_access_by_id':
      await ctx.reply(
        '–í–≤–µ–¥—ñ—Ç—å Telegram ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —É —è–∫–æ–≥–æ —Ö–æ—á–µ—Ç–µ –≤—ñ–¥–∫–ª–∏–∫–∞—Ç–∏ –¥–æ—Å—Ç—É–ø:',
        Markup.inlineKeyboard([
          [Markup.button.callback('‚ùå –í—ñ–¥–º—ñ–Ω–∞', 'show_main_menu')],
          [Markup.button.callback('–ê–¥–º—ñ–Ω –º–µ–Ω—é', 'show_admin_menu')],
        ])
      );
      ctx.session.waitingForAdminId = true;
      ctx.session.action = 'revoke_access';
      break;
    case 'show_user_info':
      {
        ctx.session.waitingForUserInfoId = true;

        await ctx.answerCbQuery();
        await ctx.reply(
          'üîç –í–≤–µ–¥—ñ—Ç—å Telegram ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —è–∫–æ–≥–æ —Ö–æ—á–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏:',
          Markup.inlineKeyboard([
            [Markup.button.callback('‚ùå –í—ñ–¥–º—ñ–Ω–∞', 'show_main_menu')],
            [Markup.button.callback('–ê–¥–º—ñ–Ω –º–µ–Ω—é', 'show_admin_menu')],
          ])
        );
      }
      break;

    case 'show_start_auth':
      if (user.role.includes('user')) {
        await ctx.replyWithPhoto(
          { source: './src/assets/last.jpg' },
          {
            parse_mode: 'Markdown',
            reply_markup: Markup.inlineKeyboard([
              [Markup.button.callback('ü§ñ –Ø–∫ –ø—Ä–∞—Ü—é—î –±–æ—Ç?', 'how_works_bot')],
              [
                Markup.button.callback('üèÜ –õ—ñ–¥–µ—Ä–±–æ—Ä–¥', 'leader_boards'),
                Markup.button.callback(
                  '‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç–∏ –≤ –ø—ñ–¥—Ç—Ä–∏–º–∫—É',
                  'get_support_link'
                ),
              ],
              [Markup.button.callback('–ü–æ—á–∞—Ç–∏', 'next_step_auth')],
            ]).reply_markup,
          }
        );
      } else if (user.role.includes('admin')) {
        await ctx.replyWithPhoto(
          { source: './src/assets/last.jpg' },
          {
            parse_mode: 'Markdown',
            reply_markup: Markup.inlineKeyboard([
              [Markup.button.callback('ü§ñ –Ø–∫ –ø—Ä–∞—Ü—é—î –±–æ—Ç?', 'how_works_bot')],
              [Markup.button.callback('üèÜ –õ—ñ–¥–µ—Ä–±–æ—Ä–¥', 'leader_boards')],
              [
                Markup.button.callback(
                  '‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç–∏ –≤ –ø—ñ–¥—Ç—Ä–∏–º–∫—É',
                  'get_support_link'
                ),
              ],
              [Markup.button.callback('–ü–æ—á–∞—Ç–∏', 'next_step_auth')],
              [Markup.button.callback('–ê–¥–º—ñ–Ω –º–µ–Ω—é', 'show_admin_menu')],
            ]).reply_markup,
          }
        );
      }
      break;
    case 'next_step_auth':
      {
        await ctx.replyWithPhoto(
          { source: './src/assets/fifty.jpg' },
          {
            caption: `üñ• –©–æ–± —É—Å–ø—ñ—à–Ω–æ —É–≤—ñ–π—Ç–∏ —Ç–∞ –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –±–æ—Ç–∞, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –∞–∫–∞—É–Ω—Ç –Ω–∞ Quotex –∑–∞ –Ω–∞—à–æ—é —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—é –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –∞–±–æ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ. ‚Üì

‚≠ïÔ∏è –í–ê–ñ–õ–ò–í–û: –í–∏ –ø–æ–≤–∏–Ω–Ω—ñ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è —Ç—ñ–ª—å–∫–∏ –∑–∞ –Ω–∞—à–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º. –í —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É –±–æ—Ç –Ω–µ –∑–º–æ–∂–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏, —â–æ –≤–∏ —Å—Ç–≤–æ—Ä–∏–ª–∏ –∞–∫–∞—É–Ω—Ç.

–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü—ñ—è –±–æ—Ç–∞ –∑–¥—ñ–π—Å–Ω—é—î—Ç—å—Å—è –∑–∞–≤–¥—è–∫–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—å–∫—ñ–π –ø—Ä–æ–≥—Ä–∞–º—ñ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏. –ú–∏ –Ω–µ —Å—Ç—è–≥—É—î–º–æ –∂–æ–¥–Ω–∏—Ö –∫–æ–º—ñ—Å—ñ–π —ñ –Ω–µ –±–µ—Ä–µ–º–æ –∑ –≤–∞—Å –Ω—ñ—è–∫–∏—Ö –∫–æ—à—Ç—ñ–≤.`,
            reply_markup: Markup.inlineKeyboard([
              [
                Markup.button.callback(
                  '–Ø —Å—Ç–≤–æ—Ä–∏–≤ –∞–∫–∫–∞—É–Ω—Ç, –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ ID',
                  'show_reg_menu'
                ),
                Markup.button.url(
                  '–°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ Quotex',
                  'https://broker-qx.pro/sign-up/?lid=1367282'
                ),
              ],
            ]).reply_markup,
          }
        );
      }
      break;

    case 'show_main_menu':
      if (user.role.includes('admin')) {
       return await ctx.replyWithPhoto(
          { source: './src/assets/start_sell.jpg' },
          {
            reply_markup: Markup.inlineKeyboard([
              [
                Markup.button.callback('üíª–û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑', 'get_signal'),
                Markup.button.callback('ü§ñ –Ø–∫ –ø—Ä–∞—Ü—é—î –±–æ—Ç?', 'how_works_bot'),
              ],
              [
                Markup.button.callback('üèÜ –õ—ñ–¥–µ—Ä–±–æ—Ä–¥', 'leader_boards'),
                Markup.button.callback(
                  '‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç–∏ –≤ –ø—ñ–¥—Ç—Ä–∏–º–∫—É',
                  'get_support_link'
                ),
                Markup.button.callback('–ê–¥–º—ñ–Ω –º–µ–Ω—é', 'show_admin_menu'),
              ],
            ]).reply_markup,
          }
        );
      }
      if (user.role.includes('user')) {
       return await ctx.replyWithPhoto(
          { source: './src/assets/start_sell.jpg' },
          {
            reply_markup: Markup.inlineKeyboard([
              [
                Markup.button.callback('üíª–û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑', 'get_signal'),
                Markup.button.callback('ü§ñ –Ø–∫ –ø—Ä–∞—Ü—é—î –±–æ—Ç?', 'how_works_bot'),
              ],
              [
                Markup.button.callback('üèÜ –õ—ñ–¥–µ—Ä–±–æ—Ä–¥', 'leader_boards'),
                Markup.button.callback(
                  '‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç–∏ –≤ –ø—ñ–¥—Ç—Ä–∏–º–∫—É',
                  'get_support_link'
                ),
              ],
            ]).reply_markup,
          }
        );
      }
      break;

    case 'get_signal': {
      const stockActive = isStockTradingTime();
      ctx.session.action = 'get_signal';
      if (user && !user.qountexId && user.role.includes('user')) {
        if (user.gaveAdminAccess === true) {
          return await ctx.editMessageText(
            '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ä–∏–Ω–∫—É:',
            Markup.inlineKeyboard([
              [
                stockActive
                  ? Markup.button.callback('STOK', 'show_time_menu_stok')
                  : Markup.button.callback(
                      'STOK ‚ùå (–∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ)',
                      'blocked',
                      false
                    ),
                Markup.button.callback('OCT', 'show_time_menu_oct'),
              ],
              [Markup.button.callback('–ù–∞–∑–∞–¥', 'show_main_menu')],
            ])
          );
        }
        return await ctx.reply(
          '‚ùå –í–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å.',
          Markup.inlineKeyboard([
            [Markup.button.callback('üìù –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è', 'show_start_auth')],
            [
              Markup.button.callback(
                '–ù–∞–ø–∏—Å–∞—Ç–∏ –≤ –ø—ñ–¥—Ç—Ä–∏–º–∫—É',
                'get_support_link'
              ),
            ],
            [Markup.button.callback('üè† –í –º–µ–Ω—é', 'show_main_menu')],
          ])
        );
      }

      await ctx.reply(
        '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ä–∏–Ω–∫—É:',
        Markup.inlineKeyboard([
          [
            stockActive
              ? Markup.button.callback('STOK', 'show_time_menu_stok')
              : Markup.button.callback(
                  'STOK ‚ùå (–∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ)',
                  'blocked',
                  false
                ),
            Markup.button.callback('OCT', 'show_time_menu_oct'),
          ],
          [Markup.button.callback('–ù–∞–∑–∞–¥', 'show_main_menu')],
        ])
      );
      break;
    }
    case 'show_time_menu_stok':
      await ctx.editMessageText(
        '–ú–µ–Ω—é STOK ‚Äî –æ–±–µ—Ä—ñ—Ç—å —Ç–∞–π–º—Ñ—Ä–µ–π–º:',
        Markup.inlineKeyboard([
          [
            Markup.button.callback('S5', 'timeframe_s5_stok'),
            Markup.button.callback('S15', 'timeframe_s15_stok'),
            Markup.button.callback('S30', 'timeframe_s30_stok'),
          ],
          [
            Markup.button.callback('M1', 'timeframe_m1_stok'),
            Markup.button.callback('M3', 'timeframe_m3_stok'),
            Markup.button.callback('M5', 'timeframe_m5_stok'),
          ],
          [
            Markup.button.callback('M30', 'timeframe_m30_stok'),
            Markup.button.callback('H1', 'timeframe_h1_stok'),
            Markup.button.callback('H4', 'timeframe_h4_stok'),
          ],
          [Markup.button.callback('–ù–∞–∑–∞–¥', 'get_signal')],
        ])
      );
      break;

    case 'show_time_menu_oct':
      await ctx.editMessageText(
        '–ú–µ–Ω—é OCT ‚Äî –æ–±–µ—Ä—ñ—Ç—å —Ç–∞–π–º—Ñ—Ä–µ–π–º:',
        Markup.inlineKeyboard([
          [
            Markup.button.callback('S5', 'timeframe_s5_oct'),
            Markup.button.callback('S15', 'timeframe_s15_oct'),
            Markup.button.callback('S30', 'timeframe_s30_oct'),
          ],
          [
            Markup.button.callback('M1', 'timeframe_m1_oct'),
            Markup.button.callback('M3', 'timeframe_m3_oct'),
            Markup.button.callback('M5', 'timeframe_m5_oct'),
          ],
          [
            Markup.button.callback('M30', 'timeframe_m30_oct'),
            Markup.button.callback('H1', 'timeframe_h1_oct'),
            Markup.button.callback('H4', 'timeframe_h4_oct'),
          ],
          [Markup.button.callback('–ù–∞–∑–∞–¥', 'get_signal')],
        ])
      );
      break;

    default:
      await ctx.answerCbQuery('–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞');
  }
}
